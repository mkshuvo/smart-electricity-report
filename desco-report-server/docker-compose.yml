version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: desco-postgres
    environment:
      POSTGRES_USER: desco_user
      POSTGRES_PASSWORD: desco_password
      POSTGRES_DB: desco_report_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - desco-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U desco_user -d desco_report_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: desco-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - desco-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # DESC Report Server
  desco-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: desco-server
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: Host=postgres;Database=desco_report_db;Username=desco_user;Password=desco_password
      ConnectionStrings__Redis: redis:6379
      Jwt__Key: your-super-secret-jwt-key-change-this-in-production
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    networks:
      - desco-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  desco-network:
    driver: bridge